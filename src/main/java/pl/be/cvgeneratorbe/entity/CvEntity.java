package pl.be.cvgeneratorbe.entity;

import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAttribute;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAutoGeneratedKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBHashKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTable;
import pl.be.cvgeneratorbe.dto.UserCV;


import java.util.List;
import java.util.Objects;
import java.util.stream.Collectors;

@DynamoDBTable(tableName = "UserCv")
public class CvEntity {

    private String id;

    private String fullName;

    private String role;

    private String typeOfProject;

    private String technologyStack;

    private String overallDescription;

    private String languages;

    private List<ExperienceEntity> detailedExperienceListDto;

    private List<EducationEntity> educationEntityList;

    private String experience;

    private CvEntity(String fullName,
                    String role,
                    String experience,
                    String typeOfProject,
                    String technologyStack,
                    String overallDescription,
                    String languages,
                    List<ExperienceEntity> detailedExperienceListDto,
                    List<EducationEntity> educationEntityList) {
        this.fullName = fullName;
        this.role = role;
        this.experience = experience;
        this.typeOfProject = typeOfProject;
        this.technologyStack = technologyStack;
        this.overallDescription = overallDescription;
        this.languages = languages;
        this.detailedExperienceListDto = detailedExperienceListDto;
        this.educationEntityList = educationEntityList;
    }

    public CvEntity() {
        //required constructor by aws dynamodb sdk
    }

    @DynamoDBHashKey(attributeName = "Id")
    @DynamoDBAutoGeneratedKey
    public String getId(){
        return id;
    }

    public void setId(String id) {
        this.id = id;
    }

    @DynamoDBAttribute(attributeName = "NameAndSurname")
    public String getFullName(){
        return this.fullName;
    }

    public void setFullName(String fullName) {
        this.fullName = fullName;
    }

    @DynamoDBAttribute(attributeName = "Role")
    public String getRole() {
        return role;
    }

    public void setRole(String role) {
        this.role = role;
    }

    @DynamoDBAttribute(attributeName = "TypeOfProject")
    public String getTypeOfProject() {
        return typeOfProject;
    }

    public void setTypeOfProject(String typeOfProject) {
        this.typeOfProject = typeOfProject;
    }

    @DynamoDBAttribute(attributeName = "TechnologyStack")
    public String getTechnologyStack() {
        return technologyStack;
    }

    public void setTechnologyStack(String technologyStack) {
        this.technologyStack = technologyStack;
    }

    @DynamoDBAttribute(attributeName = "OverallDescription")
    public String getOverallDescription(){
        return this.overallDescription;
    }

    public void setOverallDescription(){
        this.overallDescription = overallDescription;
    }

    @DynamoDBAttribute(attributeName = "Language")
    public String getLanguages() {
        return languages;
    }

    public void setLanguages(String languages) {
        this.languages = languages;
    }

    @DynamoDBAttribute(attributeName = "Experience")
    public List<ExperienceEntity> getDetailedExperienceListDto() {
        return detailedExperienceListDto;
    }

    public void setDetailedExperienceListDto(List<ExperienceEntity> detailedExperienceListDto) {
        this.detailedExperienceListDto = detailedExperienceListDto;
    }

    @DynamoDBAttribute(attributeName = "Education")
    public List<EducationEntity> getEducationEntityList() {
        return educationEntityList;
    }

    public void setEducationEntityList(List<EducationEntity> educationEntityList) {
        this.educationEntityList = educationEntityList;
    }

    @DynamoDBAttribute(attributeName = "TotalExperience")
    public String getExperience (){
        return this.experience;
    }

    public void setExperience(String experience) {
        this.experience = experience;
    }

    public static CvEntity of(UserCV userCv){
        return new CvEntity(
                userCv.getFullName(),
                userCv.getRole(),
                userCv.getExperience(),
                userCv.getTypeOfProjects(),
                userCv.getTechnologyStack(),
                userCv.getOverallDescription(),
                userCv.getLanguages(),

                userCv.getDetailedExperienceList().stream()
                        .map(ExperienceEntity::of)
                        .collect(Collectors.toList()),

                userCv.getEducationList().stream()
                        .map(EducationEntity::of)
                        .collect(Collectors.toList()));
    }

    public void withCryptDecryptedName(String crypted){
        this.fullName = crypted;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;
        CvEntity cvEntity = (CvEntity) o;
        return Objects.equals(id, cvEntity.id)
                && Objects.equals(fullName, cvEntity.fullName)
                && Objects.equals(role, cvEntity.role)
                && Objects.equals(typeOfProject, cvEntity.typeOfProject)
                && Objects.equals(technologyStack, cvEntity.technologyStack)
                && Objects.equals(languages, cvEntity.languages)
                && Objects.equals(detailedExperienceListDto, cvEntity.detailedExperienceListDto)
                && Objects.equals(educationEntityList, cvEntity.educationEntityList)
                && Objects.equals(experience, cvEntity.experience);
    }

    @Override
    public int hashCode() {
        return Objects.hash(id, fullName, role, typeOfProject, technologyStack, languages, detailedExperienceListDto, educationEntityList, experience);
    }
}
